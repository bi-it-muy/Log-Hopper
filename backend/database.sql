CREATE DATABASE IF NOT EXISTS LOG_HOPPER_DB;

USE LOG_HOPPER_DB;

DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS CACHE;
DROP TABLE IF EXISTS FILTERS;
DROP TABLE IF EXISTS TOKENS;
DROP TABLE IF EXISTS metrics;
DROP TABLE IF EXISTS metric_labels;

CREATE TABLE USERS (
    UserID CHAR(36) NOT NULL PRIMARY KEY DEFAULT (UUID()),
    userName VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(256) NOT NULL,
    rolepower INT NOT NULL
);

CREATE TABLE FILTERS (
    FilterID CHAR(36) NOT NULL DEFAULT (UUID()) PRIMARY KEY,
    UserID CHAR(36),
    FilterRules TEXT,
    FilterName VARCHAR(255),
    FilterPower VARCHAR(50),
    FOREIGN KEY (UserID) REFERENCES USERS(UserID) ON DELETE CASCADE
);

CREATE TABLE TOKENS (
    TokenID CHAR(36) NOT NULL PRIMARY KEY DEFAULT (UUID()),
    UserID CHAR(36) NOT NULL,
    TokenValue TEXT(256) NOT NULL,
    FOREIGN KEY (UserID) REFERENCES USERS(UserID) ON DELETE CASCADE
);

CREATE TABLE CACHE (
    CacheID CHAR(36) NOT NULL PRIMARY KEY DEFAULT (UUID()),
    DateTimeNow DATETIME DEFAULT CURRENT_TIMESTAMP,
    Name VARCHAR(255),
    Content TEXT
);

CREATE TABLE metrics (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name TEXT NOT NULL,
    Timestamp_value TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    value DOUBLE PRECISION NOT NULL
);

CREATE TABLE metric_labels (
    id INT AUTO_INCREMENT PRIMARY KEY,
    metric_id INT,
    tags TEXT NOT NULL,
    FOREIGN KEY (metric_id) REFERENCES metrics(id) ON DELETE CASCADE
);

CREATE TABLE settings (
    key VARCHAR(255) PRIMARY KEY,
    value TEXT NOT NULL
);